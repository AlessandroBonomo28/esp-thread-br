stages:
  - build
  - docs

variables:
    CI_DOCKER_REGISTRY: "ciregistry.espressif.cn:8443"
    ESP_THREAD_BR_PATH: "$CI_PROJECT_DIR"

before_script:
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo -n "${GITLAB_KEY}" >~/.ssh/id_rsa_base64
  - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 >~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >>~/.ssh/config

pre_commit:
  stage: .pre
  image: "$CI_DOCKER_REGISTRY/esp-idf-pre-commit:1"
  script:
    - cd ${ESP_THREAD_BR_PATH}
    - apt-get update && apt-get install -y clang-format-11
    - git fetch origin main
    - git diff-tree --no-commit-id --name-only -r HEAD origin/main | xargs pre-commit run --files

.submodule_update: &submodule_update
  - cd $ESP_THREAD_BR_PATH
  - git submodule update --init --recursive

.setup_idf: &setup_idf
  - cd $CI_PROJECT_DIR
  - git clone --recursive -b master ${IDF_GIT_REPO_URL}
  - cd esp-idf
  - git checkout 14ef8d5  # TODO: use a fixed commit in IDF v5.0 (IDF-6201)
  - git submodule sync --recursive
  - git submodule update --recursive --init
  - ./install.sh
  - . ./export.sh

.build_basic_thread_border_router: &build_basic_thread_border_router
  - cd $IDF_PATH/examples/openthread/ot_rcp
  - idf.py --preview set-target esp32h2
  - git rev-parse HEAD
  - idf.py build

  - cd $ESP_THREAD_BR_PATH/examples/basic_thread_border_router
  - idf.py build

build_examples:
    stage: build
    image: $CI_DOCKER_REGISTRY/esp-env-v5.0:4
    script:
        - *setup_idf
        - *submodule_update
        - *build_basic_thread_border_router

build_docs:
    stage: docs
    image: $CI_DOCKER_REGISTRY/esp-idf-doc-env-v5.0:2-3
    variables:
        ESP_DOCS_LATEST_BRANCH_NAME: "main"
    artifacts:
        when: always
        paths:
            - docs/_build/*/*/*.txt
            - docs/_build/*/*/html/*
        expire_in: 1 days
    script:
        - cd docs
        - pip install -r requirements.txt
        - build-docs -t esp32 esp32s2 esp32s3 esp32c3 -l en

.deploy_docs_template:
    stage: docs
    image: $CI_DOCKER_REGISTRY/esp-idf-doc-env-v5.0:2-3
    needs:
        - build_docs
    variables:
        ESP_DOCS_LATEST_BRANCH_NAME: "main"
    script:
        - source ${CI_PROJECT_DIR}/docs/utils.sh
        - add_doc_server_ssh_keys $DOCS_DEPLOY_PRIVATEKEY $DOCS_DEPLOY_SERVER $DOCS_DEPLOY_SERVER_USER
        - export GIT_VER=$(git describe --always)
        - pip install -r ${CI_PROJECT_DIR}/docs/requirements.txt
        - deploy-docs

deploy_docs_preview:
    extends:
        - .deploy_docs_template
    variables:
        TYPE: "preview"
        DOCS_BUILD_DIR: "${CI_PROJECT_DIR}/docs/_build/"
        DOCS_DEPLOY_PRIVATEKEY: "$DOCS_PREVIEW_DEPLOY_KEY"
        DOCS_DEPLOY_SERVER: "$DOCS_PREVIEW_SERVER"
        DOCS_DEPLOY_SERVER_USER: "$DOCS_PREVIEW_SERVER_USER"
        DOCS_DEPLOY_PATH: "$DOCS_PREVIEW_PATH"
        DOCS_DEPLOY_URL_BASE: "https://$DOCS_PREVIEW_SERVER_URL/docs/esp-thread-br"

deploy_docs_production:
    extends:
        - .deploy_docs_template
    variables:
        TYPE: "preview"
        DOCS_BUILD_DIR: "${CI_PROJECT_DIR}/docs/_build/"
        DOCS_DEPLOY_PRIVATEKEY: "$DOCS_PROD_DEPLOY_KEY"
        DOCS_DEPLOY_SERVER: "$DOCS_PROD_SERVER"
        DOCS_DEPLOY_SERVER_USER: "$DOCS_PROD_SERVER_USER"
        DOCS_DEPLOY_PATH: "$DOCS_PROD_PATH"
        DOCS_DEPLOY_URL_BASE: "https://docs.espressif.com/projects/esp-thread-br"
